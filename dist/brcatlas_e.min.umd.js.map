{"version":3,"file":"brcatlas_e.min.umd.js","sources":["../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/index.js","../node_modules/proj4/projs.js","../src_e/eConstants.js","../index_e.js","../src_e/eSvgMap.js"],"sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (!hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import pkg from '../package.json'\n\nexport const constants = {\n    bigrCdn: 'https://unpkg.com/brc-atlas-bigr/dist',\n    thisCdn: `https://cdn.jsdelivr.net/gh/biologicalrecordscentre/brc-atlas@${pkg.version}`\n}\n\n// For testing only\n//constants.thisCdn = ''","import { eSvgMap } from './src_e/eSvgMap'\nimport pkg from './package.json'\n\n// Output version from package json to console\n// to assist with trouble shooting.\nconsole.log(`Running ${pkg.name} version ${pkg.version}`)\n\nexport {\n  eSvgMap\n} \n","/** @module eSvgMap */\n\nimport * as d3 from 'd3'\nimport proj4 from 'proj4'\nimport { constants } from './eConstants.js'\n\nexport function eSvgMap({\n  // Default options in here\n  selector = 'body',\n  mapid = 'svgMap',\n  outputWidth = 0,\n  outputHeight = 0,\n  mapBB = [1000000, 800000, 6600000, 5500000], // [minx, miny, maxx, maxy]\n  fillEurope = 'black',\n  fillWorld = 'rgb(50,50,50)',\n  fillOcean = 'rgb(100,100,100)',\n  strokeEurope = 'rgb(100,100,100)',\n  fillDot = 'red',\n  expand = false,\n  highlightCountries = [],\n  hightlightAllEurrope = false,\n  dotSize1 = 1,\n  dotSize2 = 3,\n  dotSize3 = 6,\n  dotOpacity1 = 1,\n  dotOpacity2 = 0.4,\n  dotOpacity3 = 0.1,\n  showZoomControls = true\n}) {\n\n  // Function level variables\n  let dataGridded = [] // Transformed data\n  let transform // Transformation function from EPSG 3505 to SVG coords\n  let geoPath // D3 geopath transformation function from EPSG 3505 to SVG coords\n  let d30 // Size of 30 km in pixels\n  let currentWeek // Currently displayed week\n  let currentYear // Currently displayed year\n\n  // Create a parent div for the SVG within the parent element passed\n  // as an argument. Allows us to style correctly for positioning etc.\n  const mainDiv = d3.select(`${selector}`)\n    .append(\"div\")\n    .attr('id', mapid)\n    .style(\"position\", \"relative\")\n    .style(\"display\", \"inline\")\n\n   // Map loading spinner\n   let mapLoaderShowExplicit = false\n   const mapLoader = mainDiv.append(\"div\")\n     .classed('map-loader', true)\n   const mapLoaderInner = mapLoader.append(\"div\")\n     .classed('map-loader-inner', true)\n   mapLoaderInner.append(\"div\")\n     .classed('map-loader-spinner', true)\n   mapLoaderInner.append(\"div\").text(\"Loading map data...\")\n     .classed('map-loader-text', true)\n\n  // Zoom control\n  const zoomControls = mainDiv.append(\"div\")\n    .classed('zoom-controls', true)\n    .style('display', showZoomControls ? 'block' : 'none')\n  const zoomIn = zoomControls.append(\"div\").text(\"+\")\n    .classed('zoom-control-button', true)\n    .classed('zoom-control-top-button', true)\n  const zoomOut = zoomControls.append(\"div\").html(\"<code>&#8212;</code>\")\n    .classed('zoom-control-button', true)\n\n  // Create the SVG.\n  const svg = mainDiv.append(\"svg\")\n    .style(\"background-color\", fillOcean)\n\n  sizeSvg()\n\n  // Zoom g element\n  const zoomG = svg.append(\"g\")\n  function handleZoom(e) {\n    //console.log('e', e)\n    zoomG.attr('transform', e.transform);\n  }\n  const zoom = d3.zoom()\n    .on ('zoom', handleZoom)\n  svg.call(zoom)\n\n  // Attach actions to zoom buttons\n  zoomIn.on('click', () => svg.transition().call(zoom.scaleBy, 2))\n  zoomOut.on('click', () => svg.transition().call(zoom.scaleBy, 0.5))\n\n  // Group element for european boundary and world boundary\n  const boundaryWorld = zoomG.append(\"g\").attr(\"id\", \"boundaryWorld\")\n  //const boundaryEurope = svg.append(\"g\").attr(\"id\", \"boundaryEurope\")\n  const boundaryEurope = zoomG.append(\"g\").attr(\"id\", \"boundaryEurope\")\n  // Group element for dots\n  const dotsWeek0= zoomG.append(\"g\").attr(\"id\", \"dotsWeek0\")\n  const dotsWeek1= zoomG.append(\"g\").attr(\"id\", \"dotsWeek1\")\n  const dotsWeek2= zoomG.append(\"g\").attr(\"id\", \"dotsWeek2\")\n\n  // Load the boundary data\n  const boundaryEuropeGjson=`${constants.thisCdn}/assets/european/european-countries-3035.geojson`\n  const boundaryWorldGjson=`${constants.thisCdn}/assets/european/world-land-trimmed-3035.geojson`\n\n  // Create transformation and get dot size\n  transform = getTransformation()\n  geoPath = getGeoPath()\n  d30 = transform([30000,0])[0] - transform([0,0])[0]\n  displayMapBackground()\n\n  function sizeSvg() {\n    // Get dimensions of parent element\n    if (!outputWidth) {\n      outputWidth = document.querySelector(selector).clientWidth\n    }\n    if (!outputHeight) {\n      outputHeight = document.querySelector(selector).clientHeight\n    }\n\n    console.log('outputHeight', outputHeight)\n    console.log('outputWidth', outputWidth)\n\n    if (expand) {\n      svg.attr(\"viewBox\", \"0 0 \" + outputWidth + \" \" +  outputHeight)\n    } else {\n      svg.attr(\"width\", outputWidth)\n      svg.attr(\"height\", outputHeight)\n    }\n  }\n\n  function getTransformation() {\n\n    // Work out the extents for the transformation.\n    // The full extent of the area denoted by opts.mapBB\n    // must be visible in the SVG. Unless the SVG width/height\n    // is exactly the same aspect ratio of mapBB, then that\n    // means adjusting the real world mapBB.\n    let minxMap = mapBB[0]\n    let minyMap = mapBB[1]\n    let maxxMap = mapBB[2]\n    let maxyMap = mapBB[3]\n    const xCentreMap = minxMap + (maxxMap-minxMap) / 2\n    const yCentreMap = minyMap + (maxyMap-minyMap) / 2\n    if (outputWidth / outputHeight > (maxxMap - minxMap) / (maxyMap - minyMap)) {\n      const mapWidth = outputWidth / outputHeight * (maxyMap - minyMap)\n      minxMap = xCentreMap - mapWidth / 2\n      maxxMap = minxMap + mapWidth\n    } else {\n      const mapHeight = outputHeight / outputWidth * (maxxMap - minxMap)\n      minyMap = yCentreMap - mapHeight / 2\n      maxyMap = minyMap + mapHeight\n    }\n    // Return the transformation function\n    return function(p) {\n      const x = p[0]\n      const y = p[1]\n      let tX, tY\n      const realWidth = maxxMap-minxMap\n      const realHeight = maxyMap-minyMap\n      tX = outputWidth * (x-minxMap)/realWidth\n      tY = outputHeight - outputHeight * (y-minyMap)/realHeight\n      return [tX, tY]\n    }\n  }\n\n  function getGeoPath () {\n    return  d3.geoPath()\n      .projection(\n        d3.geoTransform({\n          point: function(x, y) {\n            const tP = transform([x,y])\n            const tX = tP[0]\n            const tY = tP[1]\n            this.stream.point(tX, tY)\n          }\n        })\n      )\n  }\n\n  function displayMapBackground() {\n\n    d3.json(boundaryEuropeGjson).then(data => {\n\n      const dataFeaturesHighlight = data.features.filter(d => hightlightAllEurrope || highlightCountries.includes(d.properties.SOVEREIGNT))\n\n      data.features = dataFeaturesHighlight\n      boundaryEurope.selectAll(\"path\").remove()\n      boundaryEurope.append(\"path\")\n        .datum(data)\n        .attr(\"d\", geoPath)\n        .style(\"fill\", fillEurope)\n        .style(\"stroke\", strokeEurope)\n    })\n\n    d3.json(boundaryWorldGjson).then(data => {\n      // console.log('data', data)\n      boundaryWorld.selectAll(\"path\").remove()\n      boundaryWorld.append(\"path\")\n        .datum(data)\n        .attr(\"d\", geoPath)\n        .style(\"fill\", fillWorld)\n    })\n\n    if (!mapLoaderShowExplicit) {\n      mapLoader.classed('map-loader-hidden', true)\n    }\n  }\n\n  // API functions\n\n  function mapData(week, year) {\n\n    currentWeek = week\n    currentYear = year\n\n    // First filter the gridded data based on week and, optionally, year.\n    const dYear = dataGridded.filter(d => !year || d.year === year)\n    let dWeek0 = dYear.filter(d => d.week === week)\n    let dWeek1 = dYear.filter(d => d.week === week - 1)\n    let dWeek2 = dYear.filter(d => d.week === week - 2)\n\n    // Remove all duplicates\n    dWeek0 = dWeek0.filter((v, i, self) => i === self.findIndex(d => d.id === v.id))\n    dWeek1 = dWeek1.filter((v, i, self) => i === self.findIndex(d => d.id === v.id))\n    dWeek2 = dWeek2.filter((v, i, self) => i === self.findIndex(d => d.id === v.id))\n\n    //\n    dotsWeek0.selectAll(\".dot0\")\n      .data(dWeek0, d => d.id)\n      .join (\n        enter => enter.append(\"circle\")\n          .classed(\"dot0\", true)\n          .attr(\"fill\", fillDot)\n          .attr(\"opacity\", dotOpacity1)\n          .attr(\"cx\", d => transform([d.x, d.y])[0])\n          .attr(\"cy\", d => transform([d.x, d.y])[1])\n          .attr(\"r\", d30/2*dotSize1)\n      )\n    dotsWeek1.selectAll(\".dot1\")\n      .data(dWeek1, d => d.id)\n      .join (\n        enter => enter.append(\"circle\")\n          .classed(\"dot1\", true)\n          .attr(\"fill\", fillDot)\n          .attr(\"opacity\", dotOpacity2)\n          .attr(\"cx\", d => transform([d.x, d.y])[0])\n          .attr(\"cy\", d => transform([d.x, d.y])[1])\n          .attr(\"r\", d30/2*dotSize2)\n      )\n\n    dotsWeek2.selectAll(\".dot2\")\n      .data(dWeek2, d => d.id)\n      .join (\n        enter => enter.append(\"circle\")\n          .classed(\"dot2\", true)\n          .attr(\"fill\", fillDot)\n          .attr(\"opacity\", dotOpacity3)\n          .attr(\"cx\", d => transform([d.x, d.y])[0])\n          .attr(\"cy\", d => transform([d.x, d.y])[1])\n          .attr(\"r\", d30/2*dotSize3)\n      )\n  }\n\n  function loadData(data) {\n\n    // console.log('data loaded', data)\n    // The data arrives with these columns: year, week, lat, lon.\n    const epsg3035 = '+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs +type=crs'\n\n    dataGridded = data.map(d => {\n      const xy = proj4(epsg3035,[d.lon,d.lat])\n      const x = xy[0]\n      const y = xy[1]\n      const gx = Math.floor(x/30000) * 30000 + 15000\n      const gy = Math.floor(y/30000) * 30000 + 15000\n      return {\n        year: d.year,\n        week: d.week,\n        x: gx,\n        y: gy,\n        id: `${gx}-${gy}`\n      }\n    })\n    // console.log('dataGridded', dataGridded)\n  }\n\n  function getWeekDates (week, year) {\n    // Given week number and a year, return start and end dates of week.\n    // Where there's no year, assume a non-leap year.\n\n    // Set up arrays\n    const mnthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    const mnthAbbrv = mnthNames.map(d => d.substring(0,3))\n\n    const mnthLengths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    if (year && year%4 === 0) mnthLengths[1] = 29\n    let dsum = 0\n    const mnthDays = mnthLengths.map(d => dsum += d)\n\n    // Return variables\n    let dds, dde, mms, mme\n    // Convert week to start day\n    const startDay = (week-1) * 7 + 1\n    const endDay = startDay + 6\n    for (let m=0; m<12; m++) {\n      if (startDay <= mnthDays[m] && !dds) {\n        dds = m ? startDay - mnthDays[m-1] : startDay\n        mms = mnthAbbrv[m]\n      }\n      if (endDay <= mnthDays[m] && !dde) {\n        dde = m ? endDay - mnthDays[m-1] : endDay\n        mme = mnthAbbrv[m]\n      }\n    }\n\n    if (mms === mme) {\n      return `${dds} - ${dde} ${mme}`\n    } else {\n      return `${dds} ${mms} - ${dde} ${mme}`\n    }\n  }\n\n  function resize(width, height) {\n    outputWidth = width\n    outputHeight = height\n    sizeSvg()\n\n    transform = getTransformation()\n    geoPath = getGeoPath()\n    d30 = transform([30000,0])[0] - transform([0,0])[0]\n    displayMapBackground()\n\n    console.log('Remap data')\n    dotsWeek0.selectAll(\".dot0\").remove()\n    dotsWeek1.selectAll(\".dot1\").remove()\n    dotsWeek2.selectAll(\".dot2\").remove()\n    mapData(currentWeek, currentYear)\n  }\n\n  function setDisplayOpts(opts) {\n    if (opts.fillOcean) {\n      fillOcean = opts.fillOcean\n      svg.style(\"background-color\", fillOcean)\n    }\n    if (opts.fillWorld) {\n      fillWorld = opts.fillWorld\n      boundaryWorld.selectAll(\"path\").style(\"fill\", fillWorld)\n    }\n    if (opts.fillEurope) {\n      fillEurope = opts.fillEurope\n      boundaryEurope.selectAll(\"path\").style(\"fill\", fillEurope)\n    }\n    if (opts.strokeEurope) {\n      strokeEurope = opts.strokeEurope\n      boundaryEurope.selectAll(\"path\").style(\"stroke\", strokeEurope)\n    }\n    if (opts.fillDot) {\n      fillDot = opts.fillDot\n      dotsWeek0.selectAll(\".dot0\").style(\"fill\", fillDot)\n      dotsWeek1.selectAll(\".dot1\").style(\"fill\", fillDot)\n      dotsWeek2.selectAll(\".dot2\").style(\"fill\", fillDot)\n    }\n    if (opts.dotSize1) {\n      dotSize1 = opts.dotSize1\n      mapData(currentWeek, currentYear)\n    }\n    if (opts.dotSize2) {\n      dotSize2 = opts.dotSize2\n      mapData(currentWeek, currentYear)\n    }\n    if (opts.dotSize3) {\n      dotSize3 = opts.dotSize3\n      mapData(currentWeek, currentYear)\n    }\n    if (opts.dotOpacity1) {\n      dotOpacity1 = opts.dotOpacity1\n      mapData(currentWeek, currentYear)\n    }\n    if (opts.dotOpacity2) {\n      dotOpacity2 = opts.dotOpacity2\n      mapData(currentWeek, currentYear)\n    }\n    if (opts.dotOpacity3) {\n      dotOpacity3 = opts.dotOpacity3\n      mapData(currentWeek, currentYear)\n    }\n  }\n\n   /** @function showBusy\n  * @param {boolean} show - A boolean value to indicate whether or not to show map data loading.\n  * @description <b>This function is exposed as a method on the API returned from the eSvgMap function</b>.\n  * Allows calling application to display/hide an indicator showing the map data is loading.\n  */\n   function showBusy(show) {\n    mapLoaderShowExplicit = show\n    mapLoader.classed('map-loader-hidden', !mapLoaderShowExplicit)\n  }\n\n  return ({\n    loadData: loadData,\n    mapData: mapData,\n    getWeekDates: getWeekDates,\n    resize: resize,\n    setDisplayOpts: setDisplayOpts,\n    showBusy: showBusy,\n  })\n}\n\n"],"names":["SEC_TO_RAD","HALF_PI","Math","PI","D2R","R2D","FORTPI","TWO_PI","SPI","exports","ft","to_meter","ignoredChar","match","obj","key","testkey","keys","Object","lkey","toLowerCase","replace","i","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","indexOf","substr","approx","whitespace","latin","keyword","endThings","digets","Parser","text","Error","level","place","root","stack","currentObject","state","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","this","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","output","d2r","input","wkt","lisp","type","projName","local","_typeof","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","cleanWKT","defs","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","globals","codeWords","codes","parse","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","projStr","testProj","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","projStore","add","len","n","start","get","ellipseName","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","Datum","a2","b2","sphere_","Ellipsoid","dc_sphere","ecc","ep2","getNadgrids","datumObj","datum_type","grids","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","genau","checkParams","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","transform","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","A","I","O","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","eccSquared","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C08","en","sphi","cphi","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","j","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","poly3_val","coefs","NODES","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","defaultDatum","Proj","common","nadgrid","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","version","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","includedProjections","constants","bigrCdn","thisCdn","pkg","geoPath","d30","currentWeek","currentYear","selector","mapid","outputWidth","outputHeight","mapBB","fillEurope","fillWorld","fillOcean","strokeEurope","fillDot","expand","highlightCountries","hightlightAllEurrope","dotSize1","dotSize2","dotSize3","dotOpacity1","dotOpacity2","dotOpacity3","showZoomControls","dataGridded","mainDiv","d3","append","attr","style","mapLoaderShowExplicit","mapLoader","classed","mapLoaderInner","zoomControls","zoomIn","zoomOut","html","svg","sizeSvg","zoomG","zoom","on","call","transition","scaleBy","boundaryWorld","boundaryEurope","dotsWeek0","dotsWeek1","dotsWeek2","boundaryEuropeGjson","boundaryWorldGjson","document","querySelector","clientWidth","clientHeight","getTransformation","minxMap","minyMap","maxxMap","maxyMap","mapWidth","mapHeight","getGeoPath","projection","tP","tX","tY","stream","displayMapBackground","then","dataFeaturesHighlight","features","includes","properties","SOVEREIGNT","selectAll","remove","mapData","week","year","dYear","dWeek0","dWeek1","dWeek2","findIndex","id","join","enter","loadData","gx","gy","getWeekDates","mnthAbbrv","mnthLengths","dds","dde","mms","mme","dsum","mnthDays","startDay","endDay","resize","width","height","setDisplayOpts","opts","showBusy","show"],"mappings":"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"}